rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function hasRole(role) {
      return isSignedIn() && role in request.auth.token.roles;
    }

    match /visitors/{visitorId} {
      // Admin full access
      allow read, write: if hasRole('admin');

      // Visitor: can create own registration (public kiosk) - optional, keep restricted if required
      allow read: if hasRole('visitor') || hasRole('guard');
      allow create: if hasRole('visitor');
      allow update: if hasRole('visitor') &&
        (request.resource.data.diff(resource.data).changedKeys().hasOnly(['status','checkOut','meetingNotes','checkIn']));

      // Guard: can update checkIn on approved visitors
      allow update: if hasRole('guard') &&
        request.resource.data.status == resource.data.status &&
        request.resource.data.checkIn != resource.data.checkIn;
    }

    match /users/{userId} {
      allow read: if hasRole('admin');
      allow write: if false;
    }
  }
}


